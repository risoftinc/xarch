syntax = "proto3";

package health;

option go_package = "go.risoftinc.com/xarch/proto";

// Health service definition
service HealthService {
  // Get health metrics
  rpc GetHealthMetric(HealthMetricRequest) returns (HealthMetricResponse);
}

// Request message for health metric
message HealthMetricRequest {
  // Empty request for now, can be extended later
}

// Response message for health metric
message HealthMetricResponse {
  // Meta information
  Meta meta = 1;
  
  // Health metric data
  optional HealthMetricData data = 2;
}

// Meta information structure
message Meta {
  // Response message
  string message = 1;
  
  // Error information (if any)
  optional string error = 2;
}

// Health metric data structure
message HealthMetricData {
  // Status map for different services
  map<string, string> status = 1;
  
  // Database information
  DatabaseInfo database = 2;
}

// Database information
message DatabaseInfo {
  // Database stats or error message
  int32 MaxOpenConnections = 1;

  int32 OpenConnections = 2;
  int32 InUse = 3;
  int32 Idle = 4;
  
  int32 WaitCount = 5;
  int32 WaitDuration = 6;
  int32 MaxIdleClosed = 7;
  int32 MaxIdleTimeClosed = 8;
  int32 MaxLifetimeClosed = 9;
}

