// Code generated by Elsa. DO NOT EDIT.

//go:generate go run -mod=mod github.com/risoftinc/elsa/cmd/elsa gen
//go:build !elsabuild
// +build !elsabuild

package http

import (
	"github.com/risoftinc/elsa"

	config "github.com/risoftinc/xarch/config"
	gologger "github.com/risoftinc/gologger"
	gorm "gorm.io/gorm"
	health "github.com/risoftinc/xarch/infrastructure/http/handler/health"
	health2 "github.com/risoftinc/xarch/domain/repositories/health"
	health3 "github.com/risoftinc/xarch/domain/services/health"
	middleware "github.com/risoftinc/xarch/infrastructure/http/middleware"
)

// This file generated from dep_manager.go at 2025-09-09T11:33:21+07:00

type Dependencies struct {
	Middlewares    middleware.IContextMiddleware
	HealthHandlers health.IHealthHandler
}

func InitializeServices(db *gorm.DB, cfg config.Config, logger gologger.Logger) *Dependencies {
	iHealthRepositories := health2.NewHealthRepositories(db)
	iHealthServices := health3.NewHealthService(iHealthRepositories)
	iHealthHandler := health.NewHealthHandlers(logger, iHealthServices)
	iContextMiddleware := middleware.NewContextMiddleware(logger)

	elsa.Generate(iHealthRepositories, iHealthServices, iHealthHandler, iContextMiddleware)
	return &Dependencies{
		Middlewares:    iContextMiddleware,
		HealthHandlers: iHealthHandler,
	}
}

